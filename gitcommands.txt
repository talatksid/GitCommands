git config --global user.name "Talat"
git config --global user.email "blah@blah.com"
git help <command>

git init demo  #demo is a repo name I chose

cd demo

#create any file

vi Rough.txt

git status # will show a new file Rough.txt that is in working

git add . #will add all files in the folder to staging

git add -u #updates any files deleted on the OS outside the git repo

git add -A # updates all modifications done outside the repo like renames or deletes or additional files

git add Rough.txt # adds the file to Staging

git commit # commits the file to git repo

git reset HEAD <filename> # unstage a file or remove latest version of file added to stage

git checkout -- <filename> # checkout the last committed version from git repo and overwrite to working directory


git log # shows the git commits with commit messahes

git log --oneline --graph --decorate --all #log with options. Use git log help to find more option. 

git show #lists commits along with file diffs

git config --global alias.hist "log --oneline --graph --decorate --all" #creates a alias hist for the log command listed above.

git comfig --global --list #list all congifs set so far

git mv <oldfilename> <newfilename> # renames the file in working and staging area. the new named file would have to be re-committed. This does not retain the older file anywhwere.

git rm <filename> # remove the file from working dir and staging. removes from repo after a git commit

#create a .gitignore file (name = .gitignore); add specific file name or wildcard file expressions to tell git the files that are to be ignored for every commit. Add and commit the .gitignore file 

git checkout -b <name of the branc> #create a new branch and switch to it

git checkout <branch name> #switch to existing branch
